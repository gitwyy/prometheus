<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pay.aphrodite.portal.dao.SqlSelectDao">
  <resultMap id="BaseResultMap" type="com.pay.aphrodite.model.entity.SqlSelect">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="OPTIMISTIC" jdbcType="INTEGER" property="optimistic" />
    <result column="OPERATOR" jdbcType="VARCHAR" property="operator" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.pay.aphrodite.model.entity.SqlSelect">
    <result column="SQL_EXPRESS" jdbcType="LONGVARCHAR" property="sqlExpress" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, CREATE_TIME, UPDATE_TIME, OPTIMISTIC, OPERATOR
  </sql>
  <sql id="Blob_Column_List">
    SQL_EXPRESS
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from SQL_SELECT
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from SQL_SELECT
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pay.aphrodite.model.entity.SqlSelect">
    insert into SQL_SELECT (ID, CREATE_TIME, UPDATE_TIME, 
      OPTIMISTIC, OPERATOR, SQL_EXPRESS
      )
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{optimistic,jdbcType=INTEGER}, #{operator,jdbcType=VARCHAR}, #{sqlExpress,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pay.aphrodite.model.entity.SqlSelect">
    insert into SQL_SELECT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="optimistic != null">
        OPTIMISTIC,
      </if>
      <if test="operator != null">
        OPERATOR,
      </if>
      <if test="sqlExpress != null">
        SQL_EXPRESS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="optimistic != null">
        #{optimistic,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="sqlExpress != null">
        #{sqlExpress,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pay.aphrodite.model.entity.SqlSelect">
    update SQL_SELECT
    <set>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="optimistic != null">
        OPTIMISTIC = #{optimistic,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        OPERATOR = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="sqlExpress != null">
        SQL_EXPRESS = #{sqlExpress,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pay.aphrodite.model.entity.SqlSelect">
    update SQL_SELECT
    set CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      OPTIMISTIC = #{optimistic,jdbcType=INTEGER},
      OPERATOR = #{operator,jdbcType=VARCHAR},
      SQL_EXPRESS = #{sqlExpress,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pay.aphrodite.model.entity.SqlSelect">
    update SQL_SELECT
    set CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      OPTIMISTIC = #{optimistic,jdbcType=INTEGER},
      OPERATOR = #{operator,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>