<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thor.query.dao.mysql.ThorTestMapper">
  <resultMap id="BaseResultMap" type="com.thor.query.model.ThorTest">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="OPTIMISTIC" jdbcType="INTEGER" property="optimistic" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="ROLE" jdbcType="VARCHAR" property="role" />
    <result column="TYPE" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, CREATE_TIME, OPTIMISTIC, NAME, ROLE, TYPE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from thor_test
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from thor_test
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.thor.query.model.ThorTest">
    insert into thor_test (ID, CREATE_TIME, OPTIMISTIC, 
      NAME, ROLE, TYPE)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{optimistic,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.thor.query.model.ThorTest">
    insert into thor_test
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="optimistic != null">
        OPTIMISTIC,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="role != null">
        ROLE,
      </if>
      <if test="type != null">
        TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="optimistic != null">
        #{optimistic,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.thor.query.model.ThorTest">
    update thor_test
    <set>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="optimistic != null">
        OPTIMISTIC = #{optimistic,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        ROLE = #{role,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        TYPE = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.thor.query.model.ThorTest">
    update thor_test
    set CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      OPTIMISTIC = #{optimistic,jdbcType=INTEGER},
      NAME = #{name,jdbcType=VARCHAR},
      ROLE = #{role,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>